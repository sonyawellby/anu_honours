"""
Routine to regrid HadISST and AWAP datasets to ACCESS1.3 grid size (1.25 NS,
1.875 EW).
"""
#Check current working directory
import os
os.chdir("/home/sonya/Documents/")
print os.getcwd()
#If working directory set up correctly, this file should load
#f = open("my_coding_routines/foo.py","r")

import netCDF4 as n
import numpy as np

#Both ACCESS1.3 SST and precipitation have same grid, so only only ACCESS file is used to regrid HadISST and AWAP.
access = n.Dataset('ACCESS_data/ts_Amon_ACCESS1-3_historical_r3i1p1_185001-200512.nc','r')
hadisst = n.Dataset('HadISST_sst.nc','r')
#awap = n.Dataset('','r')

"""
for v in access.variables:
    print v
print access['lat']
print access['lat_bnds']
print access['lon']
print access['lon_bnds']

for v in hadisst.variables:
    print v
print hadisst['longitude']
print hadisst['latitude']
"""
hadisst_y = np.zeros((15405))
hadisst_x = np.zeros((720))
"""
for i in hadisst['longitude']:
    i = 0
    while i <721:
        for x in hadisst_x:
            x == i
            x + 1 in hadisst_x == i
        i += 1
"""

x = np.zeros((1743,180,360))
count = 1
for i in x:
    x[count] = (hadisst['latitude'][-i]+hadisst['latitude'][-i-1])
    count +=1


count = 0


count = 0
for index in IPO2:
    a = np.average(IPO_array2[count,:,:])
    IPO2[count] = a
    count += 1


"""
myArray = np.zeros((10))
fakeData = [0,2,2.1,5,7,4.3,8,3,9]
fD = np.array(fakeData)

for i in myArray:
    i = 0
    while i <11:
        for x in fD:
            x == i
            x + 1 == i
        i += 1
"""

"""
myArray1 = np.arange(1,11)
myArray = np.array(myArray1)
"""

"""
for i in hadisst_y:
    for x in hadisst_y:
        x == 1
"""

"""
hadisst_y = np.arange(0,385.15,0.025) #deg E ([0] = prime meridian)
hadisst_x = np.arange(-90,91,0.25) #deg N ([0] = -90)
"""
#hadisst_x = np.true_divide(hadisst['longitude'],0.25)
